name: Continuous integration

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  check:
    name: Lint and check types
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ".[check]"
      - name: Lint with Ruff
        run: ruff check
      - name: Check types with MyPy
        run: mypy metasyn  

  test:
    name: Run test suite
    needs: check # only run if lint and type check are ok
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        include:
            - os: macos-latest
              python-version: "3.x"
            - os: windows-latest
              python-version: "3.x"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ".[test,extra]"
    - name: Test with pytest
      run: pytest tests
    - name: Check notebook output
      if: ${{ matrix.os != 'macos-latest' }}
      run: pytest --nbval-lax examples
    - name: Test basic example
      run: python examples/basic_example.py
    - name: Test CLI configuration example
      run: |
        pip install git+https://github.com/sodascience/metasyn-disclosure-control
        pip install .
        metasyn create-meta metasyn/demo/demo_titanic.csv --config examples/example_config.toml

  build-docs:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ".[docs]"
    - name: Build docs
      run: cd docs; make html SPHINXOPTS="--keep-going"
