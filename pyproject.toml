[build-system]
requires = ["setuptools>=45", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "metasyn"
authors = [
    { name = "Raoul Schram", email = "r.d.schram@uu.nl" },
    { name = "Erik-Jan van Kesteren", email = "e.vankesteren1@uu.nl" },
]
description = "Package for creating synthetic datasets while preserving privacy."
readme = "README.md"
requires-python = ">=3.10"
keywords = ["metadata", "open-data", "privacy", "synthetic-data", "tabular datasets"]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
]

dependencies = [
    "polars>=1",
    "tqdm",
    "numpy>=1.20;python_version<'3.12'",
    "numpy>1.24.4;python_version>='3.12'",
    "pyarrow", # Dependency of polars since we're converting from pandas.
    "scipy",
    "faker",
    "lingua-language-detector",
    "regex",
    "jsonschema",
    "tomli;python_version<'3.11'",
    "regexmodel>=0.2.1"
]

dynamic = ["version"]

[project.urls]
GitHub = "https://github.com/sodascience/metasyn"
documentation = "https://metasyn.readthedocs.io/en/latest/index.html"

[project.optional-dependencies]
extra = ["xlsxwriter", "tomlkit",
         "pyreadstat>=1.3", "fastexcel"]
check = ["ruff", "mypy", "types-tqdm", "types-regex"]
test = ["pytest", "nbval", "pytest-cov", "pandas"]
docs = [
    "sphinx<9.0.0", "sphinx-rtd-theme", "sphinxcontrib-napoleon",
    "sphinx-autodoc-typehints", "sphinx_inline_tabs", "sphinx_copybutton",
]
dev = [
    "metasyn[extra,check,test,docs]"
]

[project.scripts]
metasyn = "metasyn.__main__:main"

[project.entry-points."metasyn.distribution_registry"]
builtin = "metasyn.distribution:builtin_fitters"

[project.entry-points."metasyn.privacy"]
none = "metasyn.privacy:BasicPrivacy"

[project.entry-points."metasyn.filehandler"]
builtin = "metasyn.filehandler:_AVAILABLE_FILE_HANDLERS"

[tool.setuptools]
packages = ["metasyn"]
obsoletes = ["metasynth"]

[tool.setuptools_scm]
write_to = "metasyn/_version.py"

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "pandas.*",
    "jsonschema.*",
    "sklearn.*",
    "wget.*",
    "lingua.*",
    "tomllib.*",
    "pyreadstat.*",
]
ignore_missing_imports = true

[tool.ruff]
exclude = ["_version.py", "metasyn/distribution/legacy.*", "examples/*"]
line-length = 100
lint.select = ["E", "F", "W", "I", "N", "D", "PL", "ARG"]
lint.ignore = ["PLR2004", "D107", "D105", "D102"]

[tool.ruff.lint.pep8-naming]
ignore-names = ["a", "b", "mu"]

[tool.ruff.lint.pylint]
max-args=10
max-locals=35

[tool.ruff.lint.pydocstyle]
convention="numpy"

[tool.coverage.run]
omit = ["metasyn/_version.py"]
